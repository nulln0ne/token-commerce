version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: docker/Dockerfile
    container_name: nest_app
    ports:
      - '3000:3000'
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/app
    command: [ "pnpm", "run", "start:dev" ]
    profiles:
      - backend
      - full

  db:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    profiles:
      - backend
      - full

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - '6379:6379'
    profiles:
      - backend
      - full

  frontend:
    build:
      context: ./frontend
      dockerfile: docker/Dockerfile
    container_name: react_frontend
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=production
    volumes:
      - ./frontend:/app
    command: [ "pnpm", "run", "dev" ]
    profiles:
      - frontend
      - full

volumes:
  postgres_data:
